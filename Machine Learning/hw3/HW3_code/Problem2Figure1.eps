%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8.1.
%%Title: C:\Users\Chen\Documents\RealBusiness\Course Information\Machine Learning\hw3\HW3_code\Problem2Figure1.eps
%%CreationDate: 10/10/2014  01:00:53
%%DocumentNeededFonts: Helvetica
%%+ Helvetica-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -133   145   745   647
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -133   145   745   647
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -1596 7764 csm

    0     0 10546  6021 rc
87 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 10547 6022 rf
6 w
0 4716 8079 0 0 -4716 1465 5168 4 MP
PP
-8079 0 0 4716 8079 0 0 -4716 1465 5168 5 MP stroke
4 w
DO
0 sg
1465 5168 mt 9544 5168 L
9544 5168 mt 9544 5168 L
1465 3596 mt 9544 3596 L
9544 3596 mt 9544 3596 L
1465 2024 mt 9544 2024 L
9544 2024 mt 9544 2024 L
1465  452 mt 9544  452 L
9544  452 mt 9544  452 L
SO
6 w
1465 5168 mt 9544 5168 L
1465 5168 mt 1465  452 L
1465 5168 mt 1465 5248 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

1349 5674 mt 
(0) s
1666 5168 mt 1666 5208 L
1868 5168 mt 1868 5208 L
2070 5168 mt 2070 5208 L
2272 5168 mt 2272 5208 L
2474 5168 mt 2474 5208 L
2676 5168 mt 2676 5208 L
2878 5168 mt 2878 5208 L
3080 5168 mt 3080 5208 L
3282 5168 mt 3282 5208 L
3484 5168 mt 3484 5248 L
3251 5674 mt 
(50) s
3686 5168 mt 3686 5208 L
3888 5168 mt 3888 5208 L
4090 5168 mt 4090 5208 L
4292 5168 mt 4292 5208 L
4494 5168 mt 4494 5208 L
4696 5168 mt 4696 5208 L
4898 5168 mt 4898 5208 L
5100 5168 mt 5100 5208 L
5302 5168 mt 5302 5208 L
5504 5168 mt 5504 5248 L
5154 5674 mt 
(100) s
5706 5168 mt 5706 5208 L
5908 5168 mt 5908 5208 L
6110 5168 mt 6110 5208 L
6312 5168 mt 6312 5208 L
6514 5168 mt 6514 5208 L
6716 5168 mt 6716 5208 L
6918 5168 mt 6918 5208 L
7120 5168 mt 7120 5208 L
7322 5168 mt 7322 5208 L
7524 5168 mt 7524 5248 L
7174 5674 mt 
(150) s
7726 5168 mt 7726 5208 L
7928 5168 mt 7928 5208 L
8130 5168 mt 8130 5208 L
8332 5168 mt 8332 5208 L
8534 5168 mt 8534 5208 L
8736 5168 mt 8736 5208 L
8938 5168 mt 8938 5208 L
9140 5168 mt 9140 5208 L
9342 5168 mt 9342 5208 L
9544 5168 mt 9544 5248 L
9194 5674 mt 
(200) s
1465 5168 mt 1384 5168 L
1116 5324 mt 
(0) s
1465 4853 mt 1424 4853 L
1465 4539 mt 1424 4539 L
1465 4224 mt 1424 4224 L
1465 3910 mt 1424 3910 L
1465 3596 mt 1424 3596 L
1465 3596 mt 1424 3596 L
1465 3596 mt 1424 3596 L
1465 3596 mt 1424 3596 L
1465 3596 mt 1424 3596 L
1465 3596 mt 1384 3596 L
 415 3752 mt 
(2000) s
1465 3281 mt 1424 3281 L
1465 2967 mt 1424 2967 L
1465 2652 mt 1424 2652 L
1465 2338 mt 1424 2338 L
1465 2024 mt 1424 2024 L
1465 2024 mt 1424 2024 L
1465 2024 mt 1424 2024 L
1465 2024 mt 1424 2024 L
1465 2024 mt 1424 2024 L
1465 2024 mt 1384 2024 L
 415 2180 mt 
(4000) s
1465 1709 mt 1424 1709 L
1465 1395 mt 1424 1395 L
1465 1080 mt 1424 1080 L
1465  766 mt 1424  766 L
1465  452 mt 1424  452 L
1465  452 mt 1424  452 L
1465  452 mt 1424  452 L
1465  452 mt 1424  452 L
1465  452 mt 1424  452 L
1465  452 mt 1384  452 L
 415  608 mt 
(6000) s
gs 1465 452 8080 4717 rc
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1616 -783 1616 -939 1616 -790 1616 -725 3080 4438 5 MP stroke
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
1616 -629 1616 -521 1616 -473 1616 -630 3080 4438 5 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
1616 -46 1616 -52 1616 -53 1616 -102 3080 5057 5 MP stroke
0 sg
1616 -37 1616 -17 1616 -87 1616 -102 3080 5086 5 MP stroke
0.5 sg
1616 -784 1616 -973 1616 -692 1616 -653 3080 4613 5 MP stroke
gr

24 w
0.5 sg
0 sg
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 240 FMSR

4720 4578 mt 
(Winnow) s
6956 4524 mt 
(Winnow With Margin) s
6739 3494 mt 
(Perceptron With Margin) s
5468 2355 mt 
(Ada Grad) s
7325 1271 mt 
(Perceptron) s
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 360 FMSR

2583 1171 mt 
(R=1000) s
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 300 FMSR

5411 5950 mt 
(n) s
 292 4261 mt  -90 rotate
(Number Of Mistakes) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1448 5211 mt 
( ) s
9528  494 mt 
( ) s
6 w
-150 -358 8386 1761 2 MP stroke
30 71 -5 -128 8211 1460 3 MP
PP
-25 57 30 71 -5 -128 8211 1460 4 MP stroke
-58 -22 88 93 8206 1332 3 MP
PP
-30 -71 -58 -22 88 93 8206 1332 4 MP stroke
-537 -334 7153 2778 2 MP stroke
66 42 -78 -102 6628 2504 3 MP
PP
12 60 66 42 -78 -102 6628 2504 4 MP stroke
-60 16 126 26 6550 2402 3 MP
PP
-66 -42 -60 16 126 26 6550 2402 4 MP stroke
62 465 8386 2661 2 MP stroke
-10 -78 -29 125 8487 3079 3 MP
PP
39 -47 -10 -78 -29 125 8487 3079 4 MP stroke
50 36 -60 -114 8458 3204 3 MP
PP
10 78 50 36 -60 -114 8458 3204 4 MP stroke
188 -258 4616 4956 2 MP stroke
-46 63 107 -70 4743 4705 3 MP
PP
-61 7 -46 63 107 -70 4743 4705 4 MP stroke
-11 -60 -35 123 4850 4635 3 MP
PP
46 -63 -11 -60 -35 123 4850 4635 4 MP stroke
-47 -218 8980 4857 2 MP stroke
16 76 19 -126 8898 4689 3 MP
PP
-35 50 16 76 19 -126 8898 4689 4 MP stroke
-53 -31 69 107 8917 4563 3 MP
PP
-16 -76 -53 -31 69 107 8917 4563 4 MP stroke

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
